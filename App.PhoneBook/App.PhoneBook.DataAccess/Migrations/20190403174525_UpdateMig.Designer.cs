// <auto-generated />
using System;
using App.PhoneBook.DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App.PhoneBook.DataAccess.Migrations
{
    [DbContext(typeof(PhoneBookContext))]
    [Migration("20190403174525_UpdateMig")]
    partial class UpdateMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("App.PhoneBook.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("App.PhoneBook.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int?>("ParentEmployeeId");

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ParentEmployeeId")
                        .IsUnique()
                        .HasFilter("[ParentEmployeeId] IS NOT NULL");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("App.PhoneBook.Entities.Employee", b =>
                {
                    b.HasOne("App.PhoneBook.Entities.Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("App.PhoneBook.Entities.Employee", "ParentEmployee")
                        .WithOne()
                        .HasForeignKey("App.PhoneBook.Entities.Employee", "ParentEmployeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
